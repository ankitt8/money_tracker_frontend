name: Pull Request Checks

on:
  pull_request:
    branches:
      - master # You can customize this based on your branch naming convention

jobs:
  comment:
    runs-on: ubuntu-latest

#    steps:
#      - name: Comment on PR
#        uses: actions/github-script@v4
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            const prNumber = context.payload.pull_request.number;
#            const owner = context.repo.owner;
#            const repo = context.repo.repo;
#            const body = "Please make sure to mark the checkboxes in the conversation.";
#
#            await github.issues.createComment({
#              owner,
#              repo,
#              issue_number: prNumber,
#              body,
#            });

  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch PR details
        id: fetch-pr
        run: |
          PR_DETAILS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }}")

          if [ -z "${PR_DETAILS}" ]; then
            echo "Failed to fetch PR details."
            exit 1
          else
            echo "Fetched PR Details:"
            echo "${PR_DETAILS}"
          fi

          echo "PR_DETAILS=${PR_DETAILS}" >> $GITHUB_ENV
          echo "PR_DETAILS=${PR_DETAILS}" # This line is optional but can help debug

          # Now, you can use $PR_DETAILS in subsequent steps if needed
      

      - name: Echo PR details
        run: |
          echo "Fetched PR Details:"
          PR_DETAILS="${{ steps.fetch-pr.outputs.pr-details }}"
          if [ -z "$PR_DETAILS" ]; then
            echo "Error: Failed to fetch PR details."
            exit 1
          else
            echo "$PR_DETAILS" | jq .
          fi
      

      - name: Check PR conversation
        run: |
          # Extract the main body of the pull request
          PR_BODY=$(echo "$PR_DETAILS" | jq -r .body)

          # Check if specific checkboxes are marked in the comments
          checkboxes=("Tested the code locally" "Not added any image locally")

          checkboxes_found=true

          for checkbox in "${checkboxes[@]}"; do
            if ! echo "$PR_BODY" | grep -q "\[x\] $checkbox"; then
              checkboxes_found=false
              break
            fi
          done

          if $checkboxes_found; then
            echo "All required checkboxes are ticked. Proceeding..."
          else
            echo "Some required checkboxes are not ticked. Please update the PR conversation."
            exit 1
          fi
